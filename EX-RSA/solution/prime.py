import random

def is_prime(n, k=10):
    """Miller-Rabin primality test."""
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0:
        return False

    # Write n - 1 as 2^r * d
    r, d = 0, n - 1
    while d % 2 == 0:
        r += 1
        d //= 2

    # Test k times
    for _ in range(k):
        a = random.randrange(2, n - 2)
        x = pow(a, d, n)
        if x == 1 or x == n - 1:
            continue

        for _ in range(r - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
        else:
            return False
    return True

# Your numbers
numbers = [
    int("7190087327851865359486369647722389736938199089240186029822654059442884969387986527978984929085526388818309701191155606376761694979440647520669848781243959"),
    int("8191492009115442293520793572665419390975587819980330530454311782457797794973552316641433237709291468730570735642661464549942545218359395400854632512056459"),
    int("31698865070563840628517766218367108257789474570866666230446278462490172499578870247309082516100539130372266125258445717738834876807230324507658672514388398818012880795138496758953073970229336657803359830649664385779469732388351529350999503525269612151543753137044676648425153955085511474827065954242522501881166715822121366513175156529753021969839090699402564106539347493130485610131765817749534617014144400500130469515292516970047691522740841633344071811360947287936791153947935217303001708933757859263678779637")
]

# Check each number
for i, num in enumerate(numbers, start=1):
    result = "probably prime" if is_prime(num) else "composite"
    print(f"Number {i} is {result}.")